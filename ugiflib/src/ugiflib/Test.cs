// Generated by Haxe 4.0.0 (git build development @ 3018ab109)
using haxe.root;

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace ugiflib {
	public class Test : global::haxe.lang.HxObject {
		
		public Test(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public Test() {
			global::ugiflib.Test.__hx_ctor_ugiflib_Test(this);
		}
		
		
		protected static void __hx_ctor_ugiflib_Test(global::ugiflib.Test __hx_this) {
		}
		
		
		public static void main() {
			unchecked {
				global::haxe.io.Bytes io = global::sys.io.File.getBytes("jump_fall.gif");
				global::ugiflib.UGifFile file = global::ugiflib.UGifLib.read(io);
				global::haxe.Log.trace.__hx_invoke2_o(((double) (file.width) ), global::haxe.lang.Runtime.undefined, default(double), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351, 1830310359}, new object[]{"main", "ugiflib.Test", "Test.hx", new global::haxe.root.Array<object>(new object[]{file.height, file.frames})}, new int[]{1981972957}, new double[]{((double) (9) )}));
				global::sys.io.FileOutput @out = global::sys.io.File.write("jump_fall.edit.gif", default(global::haxe.lang.Null<bool>));
				new global::format.png.Writer(((global::haxe.io.Output) (@out) )).write(global::format.png.Tools.build32BGRA(( file.width * ( file.frames as global::System.Array ).Length ), file.height, file.picture, default(global::haxe.lang.Null<int>)));
				@out.close();
			}
		}
		
		
	}
}


