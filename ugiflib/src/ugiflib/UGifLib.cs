// Generated by Haxe 4.0.0 (git build development @ 3018ab109)

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace ugiflib {
	public class UGifLib : global::haxe.lang.HxObject {
		
		public UGifLib(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public UGifLib() {
			global::ugiflib.UGifLib.__hx_ctor_ugiflib_UGifLib(this);
		}
		
		
		protected static void __hx_ctor_ugiflib_UGifLib(global::ugiflib.UGifLib __hx_this) {
		}
		
		
		public static global::ugiflib.UGifFile read(global::haxe.io.Bytes source) {
			unchecked {
				object data = new global::format.gif.Reader(((global::haxe.io.Input) (new global::ugiflib.CSInput(((global::haxe.io.Bytes) (source) ))) )).read();
				int fc = global::format.gif.Tools.framesCount(data);
				int width = ((int) (global::haxe.lang.Runtime.getField_f(global::haxe.lang.Runtime.getField(data, "logicalScreenDescriptor", 2032764644, true), "width", 1247983110, true)) );
				int lineWidth = ( ( width * fc ) * 4 );
				int height = ((int) (global::haxe.lang.Runtime.getField_f(global::haxe.lang.Runtime.getField(data, "logicalScreenDescriptor", 2032764644, true), "height", 38537191, true)) );
				global::haxe.io.Bytes outBytes = global::haxe.io.Bytes.alloc(( ( ( fc * width ) * height ) * 4 ));
				global::ugiflib.UGifFile file = new global::ugiflib.UGifFile(outBytes, width, height, fc);
				{
					int _g1 = 0;
					int _g = fc;
					while (( _g1 < _g )) {
						int i = _g1++;
						object gce = global::format.gif.Tools.graphicControl(data, i);
						global::haxe.io.Bytes frameData = global::format.gif.Tools.extractFullRGBA(data, i);
						{
							int _g3 = 0;
							int _g2 = height;
							while (( _g3 < _g2 )) {
								int j = _g3++;
								outBytes.blit(( ( lineWidth * (( ( height - j ) - 1 )) ) + ( ( width * i ) * 4 ) ), frameData, ( ( j * width ) * 4 ), ( width * 4 ));
							}
							
						}
						
						if (( gce == null )) {
							file.frames[i] = 1;
						}
						else {
							file.frames[i] = ((int) (global::haxe.lang.Runtime.getField_f(gce, "delay", 1462163331, true)) );
						}
						
					}
					
				}
				
				return file;
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace ugiflib {
	public class UGifFile : global::haxe.lang.HxObject {
		
		public UGifFile(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public UGifFile(global::haxe.io.Bytes data, int w, int h, int fc) {
			global::ugiflib.UGifFile.__hx_ctor_ugiflib_UGifFile(this, data, w, h, fc);
		}
		
		
		protected static void __hx_ctor_ugiflib_UGifFile(global::ugiflib.UGifFile __hx_this, global::haxe.io.Bytes data, int w, int h, int fc) {
			__hx_this.width = w;
			__hx_this.height = h;
			__hx_this.picture = data;
			__hx_this.frames = new int[fc];
		}
		
		
		public int width;
		
		public int height;
		
		public global::haxe.io.Bytes picture;
		
		public int[] frames;
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 38537191:
					{
						this.height = ((int) (@value) );
						return @value;
					}
					
					
					case 1247983110:
					{
						this.width = ((int) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 746958758:
					{
						this.frames = ((int[]) (@value) );
						return @value;
					}
					
					
					case 2056138942:
					{
						this.picture = ((global::haxe.io.Bytes) (@value) );
						return @value;
					}
					
					
					case 38537191:
					{
						this.height = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 1247983110:
					{
						this.width = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 746958758:
					{
						return this.frames;
					}
					
					
					case 2056138942:
					{
						return this.picture;
					}
					
					
					case 38537191:
					{
						return this.height;
					}
					
					
					case 1247983110:
					{
						return this.width;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 38537191:
					{
						return ((double) (this.height) );
					}
					
					
					case 1247983110:
					{
						return ((double) (this.width) );
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override void __hx_getFields(global::haxe.root.Array<object> baseArr) {
			baseArr.push("frames");
			baseArr.push("picture");
			baseArr.push("height");
			baseArr.push("width");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace ugiflib {
	public class CSInput : global::haxe.io.Input {
		
		public CSInput(global::haxe.lang.EmptyObject empty) : base(((global::haxe.lang.EmptyObject) (global::haxe.lang.EmptyObject.EMPTY) )) {
		}
		
		
		public CSInput(global::haxe.io.Bytes b) {
			global::ugiflib.CSInput.__hx_ctor_ugiflib_CSInput(this, b);
		}
		
		
		protected static void __hx_ctor_ugiflib_CSInput(global::ugiflib.CSInput __hx_this, global::haxe.io.Bytes b) {
			__hx_this.b = b;
			__hx_this.pos = 0;
		}
		
		
		public global::haxe.io.Bytes b;
		
		public int pos;
		
		public override int readByte() {
			return ((int) (this.b.b[this.pos++]) );
		}
		
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 5594516:
					{
						this.pos = ((int) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 5594516:
					{
						this.pos = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 98:
					{
						this.b = ((global::haxe.io.Bytes) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1763375486:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "readByte", 1763375486)) );
					}
					
					
					case 5594516:
					{
						return this.pos;
					}
					
					
					case 98:
					{
						return this.b;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 5594516:
					{
						return ((double) (this.pos) );
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override void __hx_getFields(global::haxe.root.Array<object> baseArr) {
			baseArr.push("pos");
			baseArr.push("b");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}


